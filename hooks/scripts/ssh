#!/usr/bin/env bash

# Paths
readonly SSH_CONFIG=~/.ssh/config
readonly TMP_FILE=$(mktemp)

# Write config to temporary file
# Taken from Mozilla's OpenSSH Security Guidelines
# https://wiki.mozilla.org/Security/Guidelines/OpenSSH
cat >> $TMP_FILE << EOF
# Ensure KnownHosts are unreadable if leaked - it is otherwise easier to know which hosts your keys have access to.
HashKnownHosts yes
# Host keys the client accepts - order here is honored by OpenSSH
HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256
 
KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp256,ecdh-sha2-nistp384,diffie-hellman-group-exchange-sha256
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
EOF

# Check if configuration already exists
if [ -f $SSH_CONFIG ]; then
  # Add newline to new configuration
  echo '' >> $TMP_FILE
  # Append original configuration
  cat $SSH_CONFIG >> $TMP_FILE
  # Delete original config
  rm -f $SSH_CONFIG
fi

# Move new config
mkdir -p $(dirname $SSH_CONFIG)
mv $TMP_FILE $SSH_CONFIG

# Permissions
chmod 600 $SSH_CONFIG
